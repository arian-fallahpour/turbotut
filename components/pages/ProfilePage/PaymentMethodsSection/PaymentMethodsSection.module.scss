@import "@/sass/abstracts/mixins";

$padding-top: var(--gap-md);
$padding-left: var(--gap-lg);

section.PaymentMethodsSection {
}

.PaymentMethods {
  padding: $padding-top 0;
  border-radius: var(--bd-radius);
  border: 1px solid var(--c-panel-bd);
  background: var(--c-panel-bg);
  padding: $padding-top 0;

  &.revealed > &Header {
    border-bottom-color: transparent;
  }

  &.revealed &Expand > svg {
    rotate: 45deg;
    color: var(--txt-text);
  }

  &.revealed &Content {
    border-top-color: var(--c-panel-bd);
  }

  &Error {
    padding-top: $padding-top;
  }

  &Header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 $padding-left;
  }

  &Expand {
    background: transparent;
    color: var(--txt-text);
    padding: 0;

    &:hover > svg,
    &:focus-visible > svg {
      color: var(--txt-title) !important; // important due to weird bug
    }

    & > svg {
      transition: rotate 0.5s ease, color 0.5s ease;
      width: 3.5rem;
      height: 3.5rem;
    }
  }

  button.PaymentMethodsExpand {
    background: transparent;
    color: var(--txt-text);
    padding: 0;
    font-size: 2.5rem;

    &:hover > svg,
    &:focus-visible > svg {
      color: var(--txt-title) !important; // important due to weird bug
    }

    & > svg {
      transition: rotate 0.5s ease, color 0.5s ease;
      width: 1.5em;
      height: 1.5em;
    }
  }

  &Content {
    display: grid;
    border-top: 1px solid transparent;
    margin-top: $padding-top;

    transition: border 0.5s ease;
  }

  &Actions {
    display: flex;
    margin: $padding-top $padding-left 0 $padding-left;
    justify-content: flex-end;
  }

  @include respond(450px) {
    &Actions {
      justify-content: unset;

      & > * {
        width: 100%;
      }
    }
  }
}

.Cards {
  display: grid;

  &Error {
    margin-top: $padding-top;
    padding-bottom: $padding-top;
    border-bottom: 1px solid var(--c-panel-bd);
  }
}

.Card {
  display: flex;
  gap: var(--gap-md);
  align-items: center;
  padding: var(--gap-sm) $padding-left;

  border-bottom: 1px solid var(--c-panel-bd);

  &Brand {
    & img {
      object-fit: contain;
    }
  }

  &Content {
    flex: 1;
  }

  &Controls {
    display: flex;
    gap: inherit;
    align-items: center;
  }

  &Default {
  }

  &SetDefault {
    transition: opacity 0.2s ease;
    opacity: 0.5;

    &:hover,
    &:focus-visible {
      opacity: 1;
    }
  }

  &Remove {
    width: 3rem;
    height: 3rem;
  }

  @include respond(450px) {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: repeat(2, auto);
    gap: 0 var(--gap-lg);

    &Controls {
      grid-column: 2 / span 1;
      gap: var(--gap-md);
    }
  }
}

.Card > .CardControls > button.CardRemove {
  padding: 0;
}

.Modal {
  background-color: var(--bg-flat-l);
  border: 1px solid var(--c-panel-bd);
  border-radius: var(--bd-radius);
  backdrop-filter: blur(20px);
  width: 50rem;

  & > * {
    padding: var(--gap-md) var(--gap-lg);
  }

  &Header {
    border-bottom: inherit;
  }

  &Content {
    border-bottom: inherit;
    display: grid;
    gap: var(--gap-sm);
  }

  &Actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--gap-lg);
  }

  @include respond(450px) {
    width: calc(100vw - 2 * var(--gap-lg));

    &Header,
    &Content {
      text-align: center;
    }

    &Actions {
      justify-content: unset;
      gap: var(--gap-md);
      display: grid;

      & > * {
        width: 100%;
      }
    }
  }
}
