@mixin shiny($color: orange, $border-radius: var(--bd-radius)) {
  color: var(--txt-title);
  background-image: linear-gradient(to top right, var(--c-#{$color}-light), var(--c-#{$color}-dark));
  font-weight: var(--font-weight-bold);
  position: relative;

  & > * {
    position: relative;
  }

  &::before {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    width: calc(100% - 2 * var(--bd-width));
    height: calc(100% - 2 * var(--bd-width));
    background-image: linear-gradient(to bottom left, var(--c-#{$color}-light), var(--c-#{$color}-dark));
    pointer-events: none;

    @if $border-radius == 100% {
      border-radius: inherit;
    } @else {
      border-radius: calc(#{$border-radius} - var(--bd-width));
    }
  }
}

@mixin glass($color: orange, $border-radius: var(--bd-radius), $hover: false) {
  border-radius: $border-radius;

  transition: background 0.2s ease, border 0.2s ease;

  @if $color == white {
    background: rgba(white, 0.05);
    border: 1px solid rgba(white, 0.2);
    color: var(--txt-text);
  } @else {
    background: rgba(var(--c-#{$color}-rgb), 0.1);
    border: 1px solid rgba(var(--c-#{$color}-rgb), 0.4);
    color: var(--c-#{$color});
  }
  @if $hover == true {
    &:hover,
    &:focus-visible {
      filter: unset;
      @if $color == white {
        background: rgba(white, 0.1);
        border: 1px solid rgba(white, 0.3);
      } @else {
        border: 1px solid rgba(var(--c-#{$color}-rgb), 0.5);
        background: rgba(var(--c-#{$color}-rgb), 0.15);
      }
    }
  }
}

@mixin scrollbar() {
  scrollbar-width: thin;
  scrollbar-color: var(--c-panel-bg) transparent;
  scrollbar-arrow-color: transparent;
  scrollbar-gutter: auto;
}

// MEDIA QUERY MANAGER
@mixin respond($breakpoint, $less: true) {
  @if $less == true {
    @media only screen and (max-width: $breakpoint) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $breakpoint) {
      @content;
    }
  }
}
